{"version":3,"sources":["Details.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Details","useState","isLoaded","setIsLoaded","artObject","result","setResult","id","useParams","useEffect","fetch","then","response","json","console","log","principalMaker","title","webImage","scLabelLine","plaqueDescriptionEnglish","to","className","src","url","alt","width","Home","artObjects","count","items","setItems","query","setQuery","page","setPage","fetchUrl","timerId","setTimeout","clearTimeout","autoFocus","type","value","onChange","e","target","map","item","principalOrFirstMaker","objectNumber","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","data","selected","containerClassName","activeClassName","initialPage","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.958a6c98.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport './Details.css';\n\nfunction Details() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [result, setResult] = useState({artObject: {}});\n  let { id } = useParams();\n\n  const key = \"sbWDOeax\";\n  useEffect(() => {\n    const fetchUrl = () => {\n      fetch(`https://www.rijksmuseum.nl/api/en/collection/${id}?key=${key}`)\n      .then(response => response.json())\n      .then((result) => {\n        setIsLoaded(true);\n        console.log(result);\n        setResult(result.artObject);\n      });\n    };\n\n    fetchUrl();\n  }, [id]);\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    const {principalMaker, title, webImage, scLabelLine, plaqueDescriptionEnglish} = result;\n    return(\n      <div>\n        <Link to=\"/\">\n          <button>Back</button>\n        </Link>\n\n        <h1 className=\"centered\">{title}</h1>\n        <h2 className=\"centered\">{principalMaker}</h2>\n\n        <img src={webImage?.url} alt={title} width=\"100%\" />\n        <p className=\"centered label\">{scLabelLine}</p>\n\n        <p className=\"description\">{plaqueDescriptionEnglish}</p>\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React, { useState, useEffect } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate';\nimport './Home.css';\n\nfunction Home() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({artObjects: [], count: 0});\n  const [query, setQuery] = useState(\"Rembrandt\");\n  const [page, setPage] = useState(1);\n\n  const key = \"sbWDOeax\";\n  useEffect(() => {\n    const fetchUrl = () => {\n      console.log(query);\n      fetch(`https://www.rijksmuseum.nl/api/en/collection?key=${key}&q=${query}&p=${page}`)\n      .then(response => response.json())\n      .then((result) => {\n        setIsLoaded(true);\n        console.log(result);\n        setItems(result);\n      });\n    };\n\n    if (query === \"Rembrandt\") {\n      fetchUrl();\n    } else {\n      //setTimeout returns an id\n      const timerId = setTimeout(() => {\n        fetchUrl();\n      }, 500);\n\n      // this where we do clean up\n      return () => { clearTimeout(timerId); }\n    }\n  }, [query, page]);\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    const {artObjects, count} = items; \n    return(\n      <div className=\"center\">\n        <input\n          autoFocus\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}/>\n\n        {artObjects.map((item) => (\n          <div key={item.id} className=\"center margin1\">\n            <h3 className=\"margin0\">{item.principalOrFirstMaker}</h3>\n            <p className=\"margin0\"><Link to={`/details/${item.objectNumber}`}>{item.title}</Link></p>\n          </div>\n        ))}\n\n        <ReactPaginate\n          previousLabel={'<'}\n          nextLabel={'>'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={Math.ceil(count/10)}\n          marginPagesDisplayed={1}\n          pageRangeDisplayed={3}\n          onPageChange={(data) => setPage(data.selected+1)}\n          containerClassName={'pagination'}\n          activeClassName={'active'}\n          initialPage={0}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Home;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Details from './Details';\nimport Home from './Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/details/:id\">\n            <Details />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}